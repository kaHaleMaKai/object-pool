plugins {
    id 'build-announcements'
    id 'idea'
    id "io.spring.dependency-management" version "1.0.0.RELEASE" apply false
}

allprojects {

    ext.var = { String name, defaultValue=null ->
        def val = rootProject.findProperty(name)
        return val == null ? defaultValue : val
    }

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        dependencies {
            dependencySet(group: "log4j", version: "1.2.17") {
                entry "log4j"
                entry "apache-log4j-extras"
            }
            dependency 'org.projectlombok:lombok:1.16.12'
        }
    }
}

subprojects {
    apply plugin: 'java'

    version '0.1.0'
    group = 'com.github.kahalemakai'

    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        maven { url var("mavenLocal", "file://${System.getProperty("user.home")}/.m2/repository") }
    }

task delombok {
    doLast {
        description 'Delomboks the source code'
        ant.taskdef(classname: 'lombok.delombok.ant.Tasks$Delombok', classpath: configurations.lombok.asPath, name: 'delombok')
        ant.mkdir(dir: delombokedDir)
        ant.delombok(verbose: 'true', encoding: 'UTF-8', to: delombokedDir, from: 'src/main/java')
    }
}

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompileOnly 'org.projectlombok:lombok'
    }


    configurations.compile.transitive = true

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs <<
                    "-Xlint:unchecked" <<
                    "-Xlint:deprecation" <<
                    "-Xdiags:verbose"
            options.annotationProcessorPath = configurations.apt
        }
    }
}

    task cleanTests(group: "verification") {
        dependsOn project.cleanTest
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

